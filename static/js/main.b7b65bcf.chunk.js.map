{"version":3,"sources":["components/Carousel.js","services/data.service.js","components/LobbyModal.js","components/Home.js","components/DrawGameWordChoice.js","components/Draw.js","components/Lobby.js","components/ErrorPage.js","App.js","index.js"],"names":["imgUrls","Carousel","props","useState","currentImageIndex","setCurrentImageIndex","className","id","onClick","changeCharacterIndex","src","createSocket","socketIOClient","createRoom","socket","username","characterIndex","emit","joinRoom","gameCode","console","log","checkForRoom","callback","a","response","getRoomInfo","LobbyModal","params","setGameCode","setUsername","setCharacterIndex","history","useHistory","Toast","loading","dataService","hide","push","pathname","state","roomOwner","fail","Modal","show","onHide","size","aria-labelledby","centered","Body","type","value","InputGroup","FormControl","onChange","ev","target","placeholder","aria-label","aria-describedby","length","Button","variant","disabled","Prepend","Text","Home","modalShow","setModalShow","isGameCodeParams","match","DrawGameWordChoice","undefined","words","setWords","useEffect","data","chooseWord","choice","first","second","Draw","canvasRef","useRef","colorsRef","bounding","messagesEndRef","myTurn","color","lineWidth","roomInfo","setRoomInfo","socketInfo","setSocketInfo","inputValue","setInputValue","chatFeed","setChatFeed","secretWord","setSecretWord","timeDraw","setTimeDraw","initDraw","roomID","isMyTurn","on","canvas","current","context","getContext","drawing","drawLine","x0","y0","x1","y1","beginPath","moveTo","lineTo","strokeStyle","lineJoin","lineCap","stroke","closePath","w","width","h","height","onMouseUp","e","x","y","clientX","clientY","addEventListener","getBoundingClientRect","scrollIntoView","behavior","scrollToBottom","count","replace","map","key","i","style","backgroundColor","socketID","name","points","charIndex","toString","ref","content","Append","Lobby","setSocket","round","setRound","setRoomID","setSocketID","location","href","isAdmin","ErrorPage","App","to","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7b65bcf.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {FaArrowRight, FaArrowLeft} from 'react-icons/fa';\n\nconst imgUrls = [\n    \"\",\n    \"/images/svg/1-character.svg\",\n    \"/images/svg/2-character.svg\",\n    \"/images/svg/3-character.svg\",\n    \"/images/svg/4-character.svg\",\n    \"/images/svg/5-character.svg\",\n    \"/images/svg/6-character.svg\",\n    \"/images/svg/7-character.svg\",\n    \"/images/svg/8-character.svg\",\n    \"/images/svg/9-character.svg\",\n    \"/images/svg/10-character.svg\"\n];\n\nconst Carousel = (props) => {\n    const [currentImageIndex,\n        setCurrentImageIndex] = useState(1)\n    const [characterIndex,\n        setCharacterIndex] = useState(1)\n\n    function previousSlide() {\n        setCurrentImageIndex(currentImageIndex <= 1\n            ? 10\n            : currentImageIndex - 1)\n\n        props.changeCharacterIndex(currentImageIndex == 1\n            ? 10\n            : currentImageIndex - 1)\n    }\n\n    function nextSlide() {\n        setCurrentImageIndex(currentImageIndex >= 10\n            ? 1\n            : currentImageIndex + 1)\n\n        props.changeCharacterIndex(currentImageIndex == 10\n            ? 1\n            : currentImageIndex + 1)\n\n    }\n    return (\n        <div className=\"carousel\">\n            <span id=\"carousel-arrow\" onClick={previousSlide}><FaArrowLeft/>\n            </span>\n            <img src={imgUrls[currentImageIndex]} id={currentImageIndex}/>\n            <span id=\"carousel-arrow\" onClick={nextSlide}>\n                <FaArrowRight/>\n            </span>\n        </div>\n    );\n}\n\nexport default Carousel","import socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://127.0.0.1:4001\";\n\nconst createSocket = () => {\n    return socketIOClient(ENDPOINT)\n}\n\nconst createRoom = (socket, username, characterIndex) => {\n    socket.emit(\"create-room\", [username, characterIndex, 1])\n}\n\nconst joinRoom = (socket, gameCode, username, characterIndex) => {\n    console.log(\"join\")\n    socket.emit(\"request-join\", [gameCode, username, characterIndex, 0])\n}\n\nconst checkForRoom = async (socket, gameCode, callback) => {\n    return await socket.emit(\"check-for-room\", [gameCode], \n        response => {callback(response)})\n}\n\nconst getRoomInfo = (socket, gameCode) => {\n    socket.emit(\"GetRoomInfo\", gameCode)\n}\n\nexport default {\n    createSocket,\n    createRoom,\n    joinRoom,\n    checkForRoom,\n    getRoomInfo,\n}","import {useState} from 'react'\nimport Carousel from './Carousel'\nimport {Button, InputGroup, FormControl, Modal} from 'react-bootstrap';\nimport Toast from 'light-toast';\nimport {useHistory} from \"react-router-dom\";\nimport dataService from '../services/data.service';\n\nconst LobbyModal = (props) => {\n    const [gameCode,\n        setGameCode] = useState(props.params ?? '')\n    const [username,\n        setUsername] = useState('')\n    const [characterIndex,\n        setCharacterIndex] = useState(1)\n    const history = useHistory();\n\n    function handleChange(ev) {\n        setUsername(ev.target.value)\n    }\n\n    function handleChangeGameCode(ev) {\n        setGameCode(ev.target.value)\n    }\n\n    function createRoom() {\n        history.push({\n            pathname: `/lobby`,\n            state: {\n                username: username,\n                characterIndex: characterIndex,\n                gameCode: gameCode,\n                roomOwner: true\n            }\n        });\n    }\n\n    async function joinRoom() {\n        Toast.loading(\"Loading ...\");\n        const socket = dataService.createSocket()\n        await dataService.checkForRoom(socket, props.params ?? gameCode, function (response) {\n            console.log(response)\n            Toast.hide();\n            if (!response) {\n                Toast.fail(\"Erreur cette partie n'existe pas\", 2000);\n            } else {\n                history.push({\n                    pathname: `/lobby`,\n                    state: {\n                        username: username,\n                        characterIndex: characterIndex,\n                        gameCode: gameCode,\n                        roomOwner: false\n                    }\n                });\n            }\n        })\n    }\n\n    function changeCharacterIndex(value) {\n        setCharacterIndex(value)\n    }\n\n    return (\n        <Modal\n            {...props}\n            show={props.show}\n            onHide={props.onHide}\n            size=\"l\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            className=\"Modal\">\n            <Modal.Body className=\"modal-body\">\n                <button onClick={props.onHide} type=\"button\" className=\"close\">\n                    ×\n                </button>\n                <h4 id=\"h4-modal\">Je choisis mon avatar</h4>\n\n                <div className=\"caroussel\">\n                    <Carousel changeCharacterIndex ={changeCharacterIndex}/>\n                </div>\n                <InputGroup className=\"mb-3\" id=\"username\">\n                    <FormControl\n                        value={username}\n                        onChange={handleChange}\n                        placeholder=\"Pseudo\"\n                        aria-label=\"Username\"\n                        aria-describedby=\"basic-addon1\"/>\n                </InputGroup>\n                <div id=\"character-counter\">{(username.length > 0)\n                        ? <span>{username.length}\n                                / 15</span>\n                        : null}</div>\n                <br/> {((username.length >= 3 && username.length <= 15) && gameCode.length == 0)\n                    ? <Button onClick={createRoom} variant=\"success\" id=\"create-game-btn\">Créer une partie</Button>\n                    : <Button disabled variant=\"success\" id=\"create-game-btn\">Créer une partie</Button>}\n                <InputGroup className=\"mb-3\" id=\"join-game-btn\">\n                    <InputGroup.Prepend>\n                        {(gameCode.length >= 20 && username.length >= 3)\n                            ? <Button onClick={joinRoom} variant=\"success\" id=\"join-game-btn2\">Rejoindre une partie</Button>\n                            : <Button disabled variant=\"success\" id=\"join-game-btn2\">Rejoindre une partie</Button>}\n                    </InputGroup.Prepend>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text id=\"basic-addon1\">#</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                        aria-describedby=\"basic-addon1\"\n                        placeholder=\"Code de la partie\"\n                        value={gameCode}\n                        onChange={handleChangeGameCode}/>\n                </InputGroup>\n            </Modal.Body>\n        </Modal>\n    );\n\n}\n\nexport default LobbyModal\n","import {React, useState} from 'react'\nimport LobbyModal from \"./LobbyModal\"\nimport {Button} from \"react-bootstrap\"\n\n\nconst Home = (props) => {\n    const [modalShow, setModalShow] = useState(false)\n    const isGameCodeParams = props.match.params.id;\n\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"devise\"> \n\t\t\t\t<p> Devise </p>\n\t\t\t\t<br/><p>petit texte explicatif du site, but du jeu</p>\n\t\t\t</div>\n\t\t\t<div className=\"mini-games-details\">\n\t\t\t\t<div className=\"draw\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"/images/draw.png\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>descriptif rapide</p>\n\t\t\t\t\t<p>Règles, <br/><br/> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mime\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"/images/mime.png\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>descriptif rapide</p>\n\t\t\t\t\t<p>Règles, <br/><br/> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"impostor\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img src=\"/images/impostor.jpg\"/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p>descriptif rapide</p>\n\t\t\t\t\t<p>Règles, <br/><br/>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"create-join-game\">\n\t\t\t\t<Button variant=\"primary\" onClick={() => setModalShow(true)}>\n\t\t\t\t\tCréer / Rejoindre une partie\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<LobbyModal\n\t\t\t\tshow={isGameCodeParams ? true : modalShow}\n\t\t\t\t// createroom={this.createroom}\n\t\t\t\t// joinroom={this.joinroom}\n\t\t\t\tonHide={() => setModalShow(false) }\n\t\t\t\t//params={this.props.params != null ? this.props.params : null}\n\t\t\t\tparams={isGameCodeParams ?? null}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\n\nexport default Home","import React, {useEffect, useState} from 'react';\nimport {Button, Modal} from 'react-bootstrap';\n\n\nconst DrawGameWordChoice = (props) =>{\n    const [words, setWords] = useState(undefined)\n    useEffect(() => {\n        props.socket.emit(\"getWord\", function(data){\n            setWords(data)\n        })\n    }, [])\n\n    const chooseWord = (choice) =>{\n        props.socket.emit(\"choosenWord\", choice)\n        props.onHide()\n    }\n    return (\n        <Modal\n            {...props}\n            show={props.show}\n            onHide={props.onHide}\n            size=\"l\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered\n            className=\"Modal\">\n            <Modal.Body className=\"modal-body\">\n               <div>\n                   <div>\n                       <h2>Vous devez choisir un mot !</h2>\n                   </div>\n                <br/>\n                <br/>\n                <br/>\n                   { words && (\n                        <div>\n                            <Button onClick={() => chooseWord(words.first)} variant=\"outline-dark\">{words.first}</Button>\n                            <Button onClick={() => chooseWord(words.second)} variant=\"outline-dark\">{words.second} </Button>\n                        </div>\n                   )}\n               </div>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default DrawGameWordChoice;","import React, {useRef, useEffect, useState} from 'react';\nimport DrawGameWordChoice from './DrawGameWordChoice'\nimport {InputGroup, FormControl, Button} from 'react-bootstrap';\n\nconst Draw = props => {\n    const canvasRef = useRef(null);\n    const colorsRef = useRef(null);\n    const bounding = useRef(null);\n    const messagesEndRef = useRef(null);\n    const myTurn = useRef(false);\n    const color = useRef(\"black\");\n    const lineWidth = useRef(8);\n    const [roomInfo, setRoomInfo] = useState(null)\n    const [socketInfo, setSocketInfo] = useState(null)\n    const [gameInfo, setGameInfo] = useState(null)\n    const [inputValue, setInputValue] = useState('')\n    const [chatFeed, setChatFeed] = useState(null)\n    const [modalShow, setModalShow] = useState(false)\n    const [secretWord, setSecretWord] = useState(null)\n    const [timeDraw, setTimeDraw] = useState(0)\n\n\n    useEffect(() => {\n        initDraw()\n        props.socket.emit(\"GetRoomInfo\", props.roomID)\n        props.socket.emit(\"GetMyData\", function(response){\n            setSocketInfo(response)\n            if (response.isMyTurn){\n                setModalShow(true)\n            }\n        })\n    }, []);\n\n\n    props\n        .socket\n        .on(\"GetRoomInfo\", function(data){\n            setRoomInfo(data)\n    })\n\n    // props.socket.on(\"GetMyData\", data => {\n    //     setSocketInfo(data)\n    //     //console.log(\"my turn\", data.isMyTurn)\n    //     // \n    // })\n\n    const initDraw = () =>{\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n\n        const current = {\n          };\n\n        let drawing = false;\n\n        const drawLine = (x0, y0, x1, y1, color, lineWidth, emit) => {\n            context.beginPath();\n            context.moveTo(x0-475, y0-140);\n            context.lineTo(x1-475, y1-140);\n            context.strokeStyle = color\n            context.lineWidth = lineWidth;\n            context.lineJoin = context.lineCap = 'round';\n            context.stroke();\n            context.closePath();\n\n            if (!emit) {\n                return;\n            }\n            const w = canvas.width;\n            const h = canvas.height;\n\n\n            props\n                .socket\n                .emit('drawing', {\n                    x0: x0 / w,\n                    y0: y0 / h,\n                    x1: x1 / w,\n                    y1: y1 / h,\n                    color,\n                    lineWidth\n                });\n        };\n\n        // ---------------- mouse movement --------------------------------------\n\n        const onMouseDown = (e) => {\n            if(!myTurn.current) return\n\n            drawing = true;\n            current.x = e.clientX;\n            current.y = e.clientY;\n        };\n\n        const onMouseMove = (e) => {\n            if(!myTurn.current) return\n\n            if (!drawing) {\n                return;\n            }\n            drawLine(current.x, current.y, e.clientX, e.clientY, color.current, lineWidth.current, true);\n            current.x = e.clientX;\n            current.y = e.clientY;\n        };\n\n        const onMouseUp = (e) => {\n            if(!myTurn.current) return\n\n            if (!drawing) {\n                return;\n            }\n            drawing = false;\n            drawLine(current.x, current.y, e.clientX, e.clientY, color.current, lineWidth.current, true);\n        };\n\n        canvas.addEventListener('mousedown', onMouseDown, false);\n        canvas.addEventListener('mouseup', onMouseUp, false);\n        canvas.addEventListener('mouseout', onMouseUp, false);\n        canvas.addEventListener('mousemove', onMouseMove, false);\n\n        // -------------- make the canvas fill its parent component -----------------\n\n        canvas.width = bounding.current.getBoundingClientRect().height;\n        canvas.height = bounding.current.getBoundingClientRect().width\n\n\n        // ----------------------- socket.io connection ----------------------------\n        const onDrawingEvent = (data) => {\n            const w = canvas.width;\n            const h = canvas.height;\n            drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color, data.lineWidth);\n        }\n        \n        props\n            .socket\n            .on('drawing', onDrawingEvent);\n    }\n\n    const handleChatInput = (ev) =>{\n        setInputValue(ev.target.value)\n    }\n\n    const handleChatSubmit = () =>{\n        props.socket.emit(\"drawChatInput\", inputValue)\n        setInputValue('')\n    }\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      }\n\n    props\n        .socket\n        .on('getDrawChatContent', function(data){\n            setChatFeed(data)\n            scrollToBottom()\n        })\n\n   \n\n    props\n        .socket\n        .on('counter', function (count) {\n            console.log(count)\n        });\n\n    props.socket.on(\"myTurnToDraw\", function(data){\n        myTurn.current = true\n    })\n    \n\n    props.socket.on(\"choosenWord\", data =>{\n        setSecretWord(data)\n        props.socket.emit(\"startClockDraw\")\n    })\n\n    props.socket.on('drawTime', data =>{\n        setTimeDraw(data)\n    })\n\n    props.socket.on(\"drawTimeOver\", data =>{\n        myTurn.current = false\n        props.socket.emit(\"GetMyData\", function(response){\n            setSocketInfo(response)\n        })\n        props.socket.emit(\"GetRoomInfo\", props.roomID)\n        props.socket.emit(\"GetMyData\", function(response){\n            setSocketInfo(response)\n            if (response.isMyTurn){\n                setModalShow(true)\n            }\n        })\n        initDraw()\n\n    })\n\n    return (\n        <div className=\"draw-main-container\">\n            <div className=\"draw-header-container\">\n                <div className=\"draw-header-time-round\">\n                    { timeDraw && (\n                        \"temps : \" + timeDraw\n                    )}\n                </div>\n                <div className=\"draw-header-secretword\">\n                   {secretWord && (socketInfo.isMyTurn\n                    ? secretWord\n                    : secretWord.replace(/[a-zA-Z0-9_]/g, '_')) }\n                </div>\n            </div>\n            <div className=\"draw-body-container\">\n                <div className=\"draw-score-container\">\n                { roomInfo && (roomInfo.map((key, i) => \n                            <div className=\"draw-score-character-slot\" \n                                key={key.socketID.toString()} \n\n\n                                style={key.isMyTurn \n                                    ? {backgroundColor:\"green\"}\n                                    : i % 2 == 0 ? {backgroundColor:\"rgba(0, 0, 0, 0.37)\"} \n                                    : {backgroundColor:\"rgba(0, 0, 0, 0.638)\"}}>\n\n\n                                <div className=\"draw-score-character-slot-name-score\">\n                                    <div><p style={key.socketID == props.socketID ? {color:\"red\"} : null}>{key.name}{key.socketID == props.socketID ? \" (Vous)\" : null}</p></div>\n                                    <div><p>points: {key.points}</p></div>\n                                </div>\n                                <div className=\"draw-score-character-slot-avatar\"> \n                                    <img src={`/images/svg/${key.charIndex}-character.svg`} />\n                                </div>\n                            </div>\n                ))}\n                </div>\n                <div ref={bounding} className=\"draw-canvas-container\">\n                    <canvas ref={canvasRef} className=\"whiteboard\"/>\n                    { (roomInfo && socketInfo && socketInfo.isMyTurn) &&  (<div ref={colorsRef} className=\"colors\">\n                            <div className=\"color white\" onClick={() => {color.current = \"white\"}}/>\n                            <div className=\"color lightgray\" onClick={() => {color.current = \"lightgray\"}} />\n                            <div className=\"color red\" onClick={() => {color.current = \"red\"}} />\n                            <div className=\"color orange\" onClick={() => {color.current = \"orange\"}} />\n                            <div className=\"color yellow\" onClick={() => {color.current = \"yellow\"}} />\n                            <div className=\"color green\" onClick={() => {color.current = \"green\"}} />\n                            <div className=\"color lightskyblue\" onClick={() => {color.current = \"lightskyblue\"}} />\n                            <div className=\"color blue\"  onClick={() => {color.current = \"blue\"}} />\n                            <div className=\"color purple\"  onClick={() => {color.current = \"purple\"}} />\n                            <div className=\"color pink\" onClick={() => {color.current = \"pink\"}} />\n                            <div className=\"color brown\" onClick={() => {color.current = \"brown\"}} />\n                            <div className=\"color black\" onClick={() => {color.current = \"black\"}} />\n                            <div id=\"first-size\" className=\"size 8\" onClick={() => {lineWidth.current = 8}}>\n                                <div className=\"size 8 size-xs-icon\" onClick={() => {lineWidth.current = 8}}></div>\n                            </div>\n                            <div className=\"size 20\" onClick={() => {lineWidth.current = 20}}>\n                                <div className=\"size 20 size-m-icon\" onClick={() => {lineWidth.current = 20}}></div>\n                            </div>\n                            <div className=\"size 40\" onClick={() => {lineWidth.current = 40}}>\n                                <div className=\"size 40 size-xl-icon\" onClick={() => {lineWidth.current = 40}}></div>\n                            </div>\n                            <div className=\"tool white Erase\" onClick={() => {color.current = \"white\"}}>\n                            </div>\n                        </div>)\n                    }\n                </div>\n                    \n                <div className=\"draw-chat-container\">\n                    <div className=\"draw-chat-content\" >\n                            { chatFeed && (chatFeed.map((key,i ) => \n                                <div key={i} className=\"draw-chat-line\" style={i % 2 == 0 ? {backgroundColor:\"rgba(0, 0, 0, 0.37)\"} : {backgroundColor:\"rgba(0, 0, 0, 0.638)\"}}><p>{key.name} : {key.content}</p></div>\n                            ))}\n                            <div ref={messagesEndRef} />\n                    </div>\n                    <div className=\"draw-chat-input\">\n                        <InputGroup className=\"mb-3 draw-chat-input-content\">\n                            <FormControl\n                            placeholder=\"Réponse\"\n                            value={inputValue}\n                            onChange={handleChatInput}\n                            />\n                            <InputGroup.Append>\n                            <Button variant=\"outline-secondary\" onClick={handleChatSubmit}>Envoyer</Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </div>\n                </div>\n            </div>\n            <DrawGameWordChoice\n\t\t\t\tshow={modalShow}\n\t\t\t\tonHide={() => setModalShow(false) }\n                socket={props.socket}\n\t\t\t/>\n        </div>\n    );\n};\n\nexport default Draw;","import {useEffect,useState} from \"react\";\nimport {Button, InputGroup, FormControl, Modal} from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport dataService from '../services/data.service';\nimport Draw from './Draw'\n\n\nconst Lobby = props =>{\n    const [roomInfo, setRoomInfo] = useState(undefined)\n    const [socketInfo, setSocketInfo] = useState(undefined)\n    const [socket, setSocket] = useState(undefined)\n    const [round, setRound] = useState(0)\n    const [roomID, setRoomID] = useState(undefined)\n    const [socketID, setSocketID] = useState(undefined)\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!props.location.state){return history.push('/')}\n\n        const socket = dataService.createSocket()\n            \n        if (props.location.state.roomOwner){\n            dataService.createRoom(socket, props.location.state.username, props.location.state.characterIndex)\n        }else{\n            dataService.joinRoom(socket, props.location.state.gameCode, props.location.state.username, props.location.state.characterIndex)\n        }\n\n        socket.emit(\"GetMyData\", function(response){\n            setSocketInfo(response)\n            \n        })\n        \n        socket.on(\"basicInfo\", data => {\n            console.log(\"http://localhost:3000/lobby=\"+data.roomID)\n            setRoomID(data.roomID)\n            setSocketID(data.socketID)\n\n            dataService.getRoomInfo(socket, props.location.state.gameCode ?? data.roomID)\n            socket.emit(\"GetMyData\", function(response){\n                setSocketInfo(response)\n                \n            })\n        }); \n\n        socket.on(\"GetRoomInfo\", data => {\n            setRoomInfo(data)\n        })\n        \n\n        // socket.on(\"GetMyData\", data => {\n        //     setSocketInfo(data)\n        // })\n\n        socket.on(\"startDrawRoom\", () => {\n            setRound(1)\n        })\n\n        setSocket(socket)\n\n\n        return () => {\n            socket.emit(\"Quit\", props.location.state.username)\n        }\n    }, [])\n\n    function startGame() {\n        socket.emit(\"startGame\")\n    }\n    \n    if(round == 0){\n        return (\n            <div className=\"Lobby-content\">\n                <div className=\"Lobby-container\">\n                    <div className=\"Lobby-params\"></div>\n                    <div className=\"Lobby-players\">\n                        <h4>Joueurs {roomInfo && roomInfo.length}/ 4</h4>\n                        <div className=\"character-slot-container\">\n                        { roomInfo && (roomInfo.map((key) => \n                            <div className=\"character-slot\" key={key.socketID.toString()}>\n                            <p>{key.name} </p>\n                            <img src={`/images/svg/${key.charIndex}-character.svg`} />\n                            </div>\n                        ))}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"play-button\">\n                <Button variant=\"outline-dark\" href={`http://localhost:3000/lobby=${roomID}`} target={\"_blank\"}>Partager la partie</Button><br/>\n                {(socketInfo && socketInfo.isAdmin == 1) && (\n                    <Button onClick={startGame} variant=\"outline-dark\">lancer la partie </Button>\n                )}\n                </div>\n            </div>\n        )\n    }else if(round == 1){\n        return (\n            <div className=\"draw-game-scene\">\n                <Draw\n                    socket={socket}\n                    roomID={roomID}\n                    socketID={socketID}\n                />\n            </div>\n        )}\n    // }else if(round == 2){\n    //     return (\n    //         <Mime \n\n    //         />\n    //     )\n    // }else if(round ==3){\n    //     return(\n    //         <Impostor \n            \n    //         />\n    //     )\n    // }\n}\n\nexport default Lobby\n","\n\nconst ErrorPage = () => {\n\n    return (<p>Erreur page introuvable</p>)\n}\n\nexport default ErrorPage","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Lobby from \"./components/Lobby\";\nimport ErrorPage from \"./components/ErrorPage\"\n\nconst App = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n        </div>\n      </nav>\n        <Switch>\n          <Route exact path={[\"/\",\"/lobby=:id\"]} component={Home} />\n          <Route exact path={[\"/lobby\"]} component={Lobby} />\n          <Route path={[\"*\"]} component={ErrorPage} />\n        </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}